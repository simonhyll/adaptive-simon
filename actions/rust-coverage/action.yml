name: RustCoverage
description: Check for coverage and report the status as a comment on the PR
inputs:
  dashboard:
    description: Whether a dashboard should be created
    required: true
    default: 'false'
  comment:
    description: Whether a comment should be created
    required: true
    default: 'true'
outputs:
  page_url:
    description: 'URL to deployed GitHub Pages'
runs:
  using: 'composite'
  steps:
    - name: Hello World
      run: |
        echo "::notice::Deployment successful! [Check it out here](https://your-link-here.com)"

        # Set output variable
        echo "::set-output name=deploy-url::https://simon.hyll.nu/"

      shell: bash

    - name: Set code coverage status
      uses: actions/github-script@v7
      with:
        script: |
          const coverage = 90;
          const state = coverage > 80 ? 'success' : 'failure';
          const description = `Code coverage is ${coverage}%`;
          const targetUrl = 'https://your-report-url/';

          core.setOutput('page_url', targetUrl);

          await github.rest.repos.createCommitStatus({
            ...context.repo,
            sha: context.sha,
            state: state,
            context: 'code-coverage',
            description: description,
            target_url: targetUrl
          });
